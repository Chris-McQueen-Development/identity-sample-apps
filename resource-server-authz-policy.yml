# Create a service role
apiVersion: "rbac.istio.io/v1alpha1"
kind: ServiceRole
metadata:
  name: resource-server-viewer
  namespace: default
spec:
  rules:
    - services: ["*"] # or maybe can do ["productpage.svc.cluster.local"]
      methods: ["GET"]
      constraints:
        - key: "destination.labels[app]"
          values: ["resource-server"]
---
# Assign the role to users who have a certain scope
apiVersion: "rbac.istio.io/v1alpha1"
kind: ServiceRoleBinding
metadata:
  name: bind-resource-server-viewer
  namespace: default
spec:
  subjects:
    - properties:
        request.auth.claims[scope]: "todo.read"
        request.auth.claims[aud]: "todo"
  roleRef:
    kind: ServiceRole
    name: "resource-server-viewer"
---
# Create a service role
apiVersion: "rbac.istio.io/v1alpha1"
kind: ServiceRole
metadata:
  name: resource-server-manager
  namespace: default
spec:
  rules:
    - services: ["*"] # or maybe can do ["productpage.svc.cluster.local"]
      methods: ["DELETE", "POST"]
      constraints:
        - key: "destination.labels[app]"
          values: ["resource-server"]
---
# Assign the role to users who have a certain scope
apiVersion: "rbac.istio.io/v1alpha1"
kind: ServiceRoleBinding
metadata:
  name: bind-resource-server-manager
  namespace: default
spec:
  subjects:
    - properties:
        request.auth.claims[scope]: "todo.write"
        request.auth.claims[aud]: "todo"
  roleRef:
    kind: ServiceRole
    name: "resource-server-manager"
